import openpyxl
import pymysql
from loguru import logger
import re
logger.add("d:\\python\\target\\seleniumdebug{time}.log", encoding="utf-8")
orderIds = [""];


str1='orderId"2005181830659939", "2005181830663377", "2005161830574372","2005161830592303","2005161830592573","2005162515895666","2005162515889489","2005162515889879","2005162515893567","2005162515894683","2005162515894684","2005162515894738","2005172515901846","2005182515907285","2005152515883971","2005152515883865","2005151830541887","2005151830542602","2005152515881245","2005151830540896","2005152515880716", "2005191018906694", "2005192515926572", "2005192515932710", "2005192515930664", "2005192515934147", "2005192515931860", "2005202515941837", "2005202515946680", "2005202515944443", "2005212515952656", "2001121018055134", "2005200523066668", "2005201830795943", "1912112026085520", "2005212515961968", "2005212515958130", "2005212515958172", "2005212515955666", "2005212515963246", "2005212515963428", "2005212515964157", "2005222515969874", "2005222515969958", "2005222515977355", "2005222515970477", "2005222515975820", "2005232515981848", "2005232515980643"'
str2='detailId"2005181832554116", "2005181832554517", "2005182515242742","2005172515243221","2005162515231301","2005162515232232","2005162515232155","2005162515232154","2005162515226978","2005162515222995","2005162515222450","2005161832467701","2005161832467375","2005161832447232""2005152515216578","2005152515216441","2005151832409595","2005151832407447","2005152515210297","2005151832405552","2005152515209737", "2005191019379229", "2005192515270819", "2005192515279575", "2005192515278458", "2005192515278981", "2005192515280621", "2005202515293410", "2005202515298874", "2005202515292912", "2005212515308163", "2001121018337343", "2005200524821885", "2005201832722706", "1912112026145436", "2005212515321493", "2005212515310995", "2005212515314158", "2005212515311586", "2005212515319755", "2005212515320000", "2005212515320518", "2005222515329921", "2005222515333139", "2005222515337958", "2005222515330742", "2005222515339710", "2005232515349235", "2005232515344798"'

str1='orderId"2005181830659939", "2005181830663377", "2005161830574372","2005161830592303","2005161830592573","2005162515895666","2005162515889489","2005162515889879","2005162515893567","2005162515894683","2005162515894684","2005162515894738","2005172515901846","2005182515907285","2005152515883971","2005152515883865","2005151830541887","2005151830542602","2005152515881245","2005151830540896","2005152515880716", "2005191018906694", "2005192515926572", "2005192515932710", "2005192515930664", "2005192515934147", "2005192515931860", "2005202515941837", "2005202515946680", "2005202515944443", "2005212515952656", "2001121018055134", "2005200523066668", "2005201830795943", "1912112026085520", "2005212515961968", "2005212515958130", "2005212515958172", "2005212515955666", "2005212515963246", "2005212515963428", "2005212515964157", "2005222515969874", "2005222515969958", "2005222515977355", "2005222515970477", "2005222515975820", "2005232515981848", "2005232515980643", "2005242515993577", "2005242515995224", "2005242515995302", "2005252515997754"'
str2='detailId"2005181832554116", "2005181832554517", "2005182515242742","2005172515243221","2005162515231301","2005162515232232","2005162515232155","2005162515232154","2005162515226978","2005162515222995","2005162515222450","2005161832467701","2005161832467375","2005161832447232""2005152515216578","2005152515216441","2005151832409595","2005151832407447","2005152515210297","2005151832405552","2005152515209737", "2005191019379229", "2005192515270819", "2005192515279575", "2005192515278458", "2005192515278981", "2005192515280621", "2005202515293410", "2005202515298874", "2005202515292912", "2005212515308163", "2001121018337343", "2005200524821885", "2005201832722706", "1912112026145436", "2005212515321493", "2005212515310995", "2005212515314158", "2005212515311586", "2005212515319755", "2005212515320000", "2005212515320518", "2005222515329921", "2005222515333139", "2005222515337958", "2005222515330742", "2005222515339710", "2005232515349235", "2005232515344798", "2005242515365202", "2005242515363867", "2005242515363965", "2005252515369811"'

str1='orderId"2005181830659939", "2005181830663377", "2005161830574372","2005161830592303","2005161830592573","2005162515895666","2005162515889489","2005162515889879","2005162515893567","2005162515894683","2005162515894684","2005162515894738","2005172515901846","2005182515907285","2005152515883971","2005152515883865","2005151830541887","2005151830542602","2005152515881245","2005151830540896","2005152515880716", "2005191018906694", "2005192515926572", "2005192515932710", "2005192515930664", "2005192515934147", "2005192515931860", "2005202515941837", "2005202515946680", "2005202515944443", "2005212515952656", "2001121018055134", "2005200523066668", "2005201830795943", "1912112026085520", "2005212515961968", "2005212515958130", "2005212515958172", "2005212515955666", "2005212515963246", "2005212515963428", "2005212515964157", "2005222515969874", "2005222515969958", "2005222515977355", "2005222515970477", "2005222515975820", "2005232515981848", "2005232515980643", "2005242515993577", "2005242515995224", "2005242515995302", "2005252515997754", "2005252516003618", "2005251831008710"'
str2='detailId"2005181832554116", "2005181832554517", "2005182515242742","2005172515243221","2005162515231301","2005162515232232","2005162515232155","2005162515232154","2005162515226978","2005162515222995","2005162515222450","2005161832467701","2005161832467375","2005161832447232""2005152515216578","2005152515216441","2005151832409595","2005151832407447","2005152515210297","2005151832405552","2005152515209737", "2005191019379229", "2005192515270819", "2005192515279575", "2005192515278458", "2005192515278981", "2005192515280621", "2005202515293410", "2005202515298874", "2005202515292912", "2005212515308163", "2001121018337343", "2005200524821885", "2005201832722706", "1912112026145436", "2005212515321493", "2005212515310995", "2005212515314158", "2005212515311586", "2005212515319755", "2005212515320000", "2005212515320518", "2005222515329921", "2005222515333139", "2005222515337958", "2005222515330742", "2005222515339710", "2005232515349235", "2005232515344798", "2005242515365202", "2005242515363867", "2005242515363965", "2005252515369811", "2005252515379175", "2005251832992440"'


str1='orderId"2005181830659939", "2005181830663377", "2005161830574372","2005161830592303","2005161830592573","2005162515895666","2005162515889489","2005162515889879","2005162515893567","2005162515894683","2005162515894684","2005162515894738","2005172515901846","2005182515907285","2005152515883971","2005152515883865","2005151830541887","2005151830542602","2005152515881245","2005151830540896","2005152515880716", "2005191018906694", "2005192515926572", "2005192515932710", "2005192515930664", "2005192515934147", "2005192515931860", "2005202515941837", "2005202515946680", "2005202515944443", "2005212515952656", "2001121018055134", "2005200523066668", "2005201830795943", "1912112026085520", "2005212515961968", "2005212515958130", "2005212515958172", "2005212515955666", "2005212515963246", "2005212515963428", "2005212515964157", "2005222515969874", "2005222515969958", "2005222515977355", "2005222515970477", "2005222515975820", "2005232515981848", "2005232515980643", "2005242515993577", "2005242515995224", "2005242515995302", "2005252515997754", "2005252516003618", "2005251831008710", "2006010523693706", "2006023027123913"'
str2='detailId"2005181832554116", "2005181832554517", "2005182515242742","2005172515243221","2005162515231301","2005162515232232","2005162515232155","2005162515232154","2005162515226978","2005162515222995","2005162515222450","2005161832467701","2005161832467375","2005161832447232""2005152515216578","2005152515216441","2005151832409595","2005151832407447","2005152515210297","2005151832405552","2005152515209737", "2005191019379229", "2005192515270819", "2005192515279575", "2005192515278458", "2005192515278981", "2005192515280621", "2005202515293410", "2005202515298874", "2005202515292912", "2005212515308163", "2001121018337343", "2005200524821885", "2005201832722706", "1912112026145436", "2005212515321493", "2005212515310995", "2005212515314158", "2005212515311586", "2005212515319755", "2005212515320000", "2005212515320518", "2005222515329921", "2005222515333139", "2005222515337958", "2005222515330742", "2005222515339710", "2005232515349235", "2005232515344798", "2005242515365202", "2005242515363867", "2005242515363965", "2005252515369811", "2005252515379175", "2005251832992440", "2006010525644904", "2006023026698355"'

db = pymysql.connect(host="47.95.49.67",
                     port=8066,
                     user="sidb",
                     passwd="vFQ8nsab3Ia",
                     db="pay")




cur = db.cursor()
cur.execute("select order_id, err_msg from zys_arrearage_order where pay_type = 2 and arre_status = 1 and err_msg like '%参数中扣款金额不允许大于凭证总的扣款金额%'");
res = cur.fetchall()
# cur.execute("select shop_id,group_id from zys_shop_group limit 99999999")
#
# res2 = cur.fetchall()

di1 = list(res)

detailids = []
for a in di1:
    value = re.findall("\d+", a[1])
    cur.execute("select detail_id, food_num from zys_order_detail where order_id = '{}' and food_price = {}".format(a[0],
        str(int(value[1]) - int(value[2]))));
    detail = cur.fetchall()
    if len(detail) == 0:
        logger.error(a[0] + "详情错误")


    detailids.append(detail[0][0])
    str1 +=  ", \"" + a[0] + "\""
    str2 +=  ", \"" + detail[0][0] + "\""
    print("原订单" + a[0] + "    total_pay_amount:" + value[1])
    print("原订单详情" + detail[0][0] + "   food_num: " + str(detail[0][1]))

print("刷库语句")
for a in di1:
    value = re.findall("\d+", a[1])
    print("update zhiyunshan_trade_order{}.zys_order_info set total_pay_amount = {}, total_amount = {} where order_id = '{}';"
          .format(str(int(a[0][6:8]) + 1), value[2], value[2], a[0]));

for detailid in detailids:
    print("update zhiyunshan_trade_order{}.zys_order_detail set food_num = food_num - 1 where detail_id = '{}';".format(str(int(detailid[6:8]) + 1), detailid))

print("累计处理")

print(str1)
print(str2)
logger.info(str(di1))
print("str1='" + str1 + "'")
print("str2='" + str2 + "'")

#
# res2 = dict(filter(lambda x: not x[0] in di1.values(), res2))
#
# res4 = dict(filter(lambda x: not x[0] in di1))
# result = dict(zip(res2.keys(), map(lambda x: di1[x], res2.values())))
#
#
#
cur.close()
db.close()



# def getComSql(key, param):
#     value1 = desList[1::]
#     value2 = desList[1::]
#     value2.append("e_dinner_id")
#     value1.append("e_dinner_id")
#     value2[9] = str(key)
#     print(value1)
#     sql = "INSERT INTO `zys_dinner_type_test2` (" + ','.join(value1) + ") select " + ','.join(value2) + " from " \
#                                                                                                         "zys_dinner_type_test2 where shop_id = " + str(param) + ";"
#     return sql
#

#
# f = open("d:\\python\\1.sql", "w", encoding="utf-8")
# for key in dict1.keys():
#     f.write(getComSql(key, dict1[key]) + "\n")
# f.close()
